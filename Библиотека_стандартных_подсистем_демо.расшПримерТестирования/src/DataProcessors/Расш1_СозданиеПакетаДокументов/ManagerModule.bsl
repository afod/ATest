#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Процедура СоздатьПакетОтгрузочныхДокументов() Экспорт

// 1. Определяем цену: получаем курс EUR
Цена = 1;

Запрос = Новый Запрос;
Запрос.Текст = 
	"ВЫБРАТЬ
	|	КурсыВалютСрезПоследних.Курс,
	|	КурсыВалютСрезПоследних.Валюта
	|ИЗ
	|	РегистрСведений.КурсыВалют.СрезПоследних КАК КурсыВалютСрезПоследних";

РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Цена = ВыборкаДетальныеЗаписи.Курс;
КонецЦикла;

// 2. Цена известна - Получаем данные чеков: какую номенклатуру и в каком объеме помещаем в РТУ
Запрос.Текст = 
	"ВЫБРАТЬ
	|	Расш1_ДанныеЧеков.Номенклатура,
	|	СУММА(Расш1_ДанныеЧеков.Количество) КАК Количество
	|ИЗ
	|	РегистрСведений.Расш1_ДанныеЧеков КАК Расш1_ДанныеЧеков
	|ГДЕ
	|	Расш1_ДанныеЧеков.Период = &Период
	|СГРУППИРОВАТЬ ПО
	|	Расш1_ДанныеЧеков.Номенклатура";

Запрос.УстановитьПараметр("Период", НачалоДня(ТекущаяДата()));
РезультатЗапроса = Запрос.Выполнить();
ВыборкаПроданнойНоменклатуры = РезультатЗапроса.Выбрать();
ЕстьПродажи = Ложь;
Если ВыборкаПроданнойНоменклатуры.Следующий() Тогда
	ЕстьПродажи = Истина;
КонецЕсли; 

Если НЕ ЕстьПродажи Тогда
	Возврат;
КонецЕсли;  

// 3. Знаем и цену и проданную номенклатуру - создаем Расходную накладную
ДокументРТУОбъект = Документы._ДемоРеализацияТоваров.СоздатьДокумент();
ДокументРТУОбъект.Дата = ТекущаяДата();
ДокументРТУОбъект.Контрагент = Справочники._ДемоКонтрагенты.НайтиПоНаименованию("Розничный покупатель", Истина);
ДокументРТУОбъект.Партнер = ДокументРТУОбъект.Контрагент.Партнер;

// Получаем единственный договор контрагента
Запрос.Текст = 	"ВЫБРАТЬ Первые 1
	|	Договоры.Ссылка
	|ИЗ
	|	Справочник._ДемоДоговорыКонтрагентов КАК Договоры
	|ГДЕ Договоры.Владелец = &Контрагент";
Запрос.УстановитьПараметр("Контрагент", ДокументРТУОбъект.Контрагент);
ВыборкаДоговор = Запрос.Выполнить().Выбрать();
Если ВыборкаДоговор.Следующий() Тогда
	ДокументРТУОбъект.Договор = ВыборкаДоговор.Ссылка;
КонецЕсли;
ДокументРТУОбъект.ГоловнаяОрганизация = ДокументРТУОбъект.Договор.Организация;
ДокументРТУОбъект.МестоХранения = Справочники._ДемоМестаХранения.НайтиПоНаименованию("РозничныйСклад");
ДокументРТУОбъект.Валюта = ВыборкаДетальныеЗаписи.Валюта;
ДокументРТУОбъект.Ответственный = Пользователи.ТекущийПользователь();
ДокументРТУОбъект.Комментарий = "Продажи за " + ТекущаяДата();

Пока ВыборкаПроданнойНоменклатуры.Следующий() Цикл
	НоваяСтрокаТовара = ДокументРТУОбъект.Товары.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрокаТовара, ВыборкаПроданнойНоменклатуры);
	НоваяСтрокаТовара.Цена = Цена;
	ДокументРТУОбъект.Расш1_СуммаДокумента = ДокументРТУОбъект.Расш1_СуммаДокумента + Цена * НоваяСтрокаТовара.Количество; 	
КонецЦикла;	
ДокументРТУОбъект.Записать();

// 4. Создаем ПКО
ДокументОбъектПКО = Документы._ДемоРасходныйКассовыйОрдер.СоздатьДокумент();
ДокументОбъектПКО.Дата = ТекущаяДата();
ДокументОбъектПКО.Ответственный = Пользователи.ТекущийПользователь();
ДокументОбъектПКО.Комментарий = "Продажи за " + ТекущаяДата();
ДокументОбъектПКО.Сумма = ДокументРТУОбъект.Расш1_СуммаДокумента;
ДокументОбъектПКО.Записать(РежимЗаписиДокумента.Проведение);

// 5. Архивируем чеки
// выбираем все незаархивированные чеки и архивируем
Запрос.Текст = 	"ВЫБРАТЬ
|	Расш1_ДанныеЧеков.Период,
|	Расш1_ДанныеЧеков.НомерЧека,
|	Расш1_ДанныеЧеков.Номенклатура,
|	Расш1_ДанныеЧеков.Количество,
|	ИСТИНА КАК Архивный
|ИЗ
|	РегистрСведений.Расш1_ДанныеЧеков КАК Расш1_ДанныеЧеков
|ГДЕ
|	НЕ Расш1_ДанныеЧеков.Архивный";

ВыборкаЧеки = Запрос.Выполнить().Выбрать();
Пока ВыборкаЧеки.Следующий() Цикл
	ЗаписьЧека = РегистрыСведений.Расш1_ДанныеЧеков.СоздатьМенеджерЗаписи();
	ЗаполнитьЗначенияСвойств(ЗаписьЧека, ВыборкаЧеки);
	ЗаписьЧека.Записать();
КонецЦикла; 
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли