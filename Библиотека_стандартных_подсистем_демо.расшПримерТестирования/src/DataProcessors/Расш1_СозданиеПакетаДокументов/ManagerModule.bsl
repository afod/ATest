#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Процедура СоздатьПакетОтгрузочныхДокументов() Экспорт

	ДатаСоздаваемыхДокументов = ТекущаяДата();

// 1. Определяем цену: получаем курс EUR
	СтруктураТекущегоКурса = ПолучитьЦену(ДатаСоздаваемыхДокументов);

// 2. Цена известна - Получаем данные чеков: какую номенклатуру и в каком объеме помещаем в РТУ
	СтруктураДанныеЧеков = ПолучитьДанныеЧеков();

	Если Не СтруктураДанныеЧеков.ЕстьПродажи Тогда
		Возврат;
	КонецЕсли;  

// 3. Знаем и цену и проданную номенклатуру - создаем Расходную накладную
	РТУСсылка = СоздатьРТУ(ДатаСоздаваемыхДокументов, СтруктураТекущегоКурса, СтруктураДанныеЧеков.ВыборкаЧеков);

// 4. Создаем ПКО
	СоздатьПКО(РТУСсылка);

// 5. Архивируем чеки
	ЗаархивироватьЧеки();

КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

Функция ПолучитьЦену(НаДату)

	СтруктураЦены = Новый Структура("Валюта, Период, Курс", Неопределено, Неопределено, 1);

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КурсыВалютСрезПоследних.Период,
	|	КурсыВалютСрезПоследних.Курс,
	|	КурсыВалютСрезПоследних.Валюта
	|ИЗ
	|	РегистрСведений.КурсыВалют.СрезПоследних КАК КурсыВалютСрезПоследних";

	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаКурс = РезультатЗапроса.Выбрать();
	Если ВыборкаКурс.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(СтруктураЦены, ВыборкаКурс);
	КонецЕсли;

	Возврат СтруктураЦены;

КонецФункции

Функция ПолучитьДанныеЧеков()

	СтруктураПолученныхЧеков = Новый Структура("ЕстьПродажи, ВыборкаЧеков", Ложь, Неопределено);

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Расш1_ДанныеЧеков.Номенклатура,
	|	СУММА(Расш1_ДанныеЧеков.Количество) КАК Количество
	|ИЗ
	|	РегистрСведений.Расш1_ДанныеЧеков КАК Расш1_ДанныеЧеков
	|ГДЕ
	|	Расш1_ДанныеЧеков.Период = &Период
	|СГРУППИРОВАТЬ ПО
	|	Расш1_ДанныеЧеков.Номенклатура";

	Запрос.УстановитьПараметр("Период", НачалоДня(ТекущаяДата()));

	РезультатЗапроса = Запрос.Выполнить();

	ВыборкаПроданнойНоменклатуры = РезультатЗапроса.Выбрать();

	ЕстьПродажи = Ложь;
	Если ВыборкаПроданнойНоменклатуры.Следующий() Тогда
		ЕстьПродажи = Истина;
	КонецЕсли;

	СтруктураПолученныхЧеков.ВыборкаЧеков 		= ВыборкаПроданнойНоменклатуры;
	СтруктураПолученныхЧеков.ЕстьПродажи 		= ЕстьПродажи;

	Возврат СтруктураПолученныхЧеков;

КонецФункции

Функция СоздатьРТУ(НаДату, СтруктураТекущегоКурса, ВыборкаПроданнойНоменклатуры)

	ДокументРТУОбъект = Документы._ДемоРеализацияТоваров.СоздатьДокумент();
	ДокументРТУОбъект.Дата = НаДату;
	ДокументРТУОбъект.Контрагент = Справочники._ДемоКонтрагенты.НайтиПоНаименованию("Розничный покупатель", Истина);
	ДокументРТУОбъект.Партнер = ДокументРТУОбъект.Контрагент.Партнер;
// Получаем единственный договор контрагента
	ДокументРТУОбъект.Договор = ПолучитьДоговорКонтрагента(ДокументРТУОбъект.Контрагент);
	ДокументРТУОбъект.ГоловнаяОрганизация = ДокументРТУОбъект.Договор.Организация;
	ДокументРТУОбъект.МестоХранения = Справочники._ДемоМестаХранения.НайтиПоНаименованию("РозничныйСклад");
	ДокументРТУОбъект.Валюта = СтруктураТекущегоКурса.Валюта;
	ДокументРТУОбъект.Ответственный = Пользователи.ТекущийПользователь();
	ДокументРТУОбъект.Комментарий = "Продажи за " + ТекущаяДата();

	Пока ВыборкаПроданнойНоменклатуры.Следующий() Цикл
		НоваяСтрокаТовара = ДокументРТУОбъект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаТовара, ВыборкаПроданнойНоменклатуры);
		НоваяСтрокаТовара.Цена = СтруктураТекущегоКурса.Курс;
		ДокументРТУОбъект.Расш1_СуммаДокумента = ДокументРТУОбъект.Расш1_СуммаДокумента + СтруктураТекущегоКурса.Курс
			* НоваяСтрокаТовара.Количество;
	КонецЦикла;
	ДокументРТУОбъект.Записать();

	Возврат ДокументРТУОбъект.Ссылка;

КонецФункции

Функция СоздатьПКО(СтруктураДанныеРТУ)
	
// 4. Создаем ПКО
	ДокументОбъектПКО = Документы._ДемоРасходныйКассовыйОрдер.СоздатьДокумент();
	ДокументОбъектПКО.Дата = СтруктураДанныеРТУ.Дата;
	ДокументОбъектПКО.Ответственный = Пользователи.ТекущийПользователь();
	ДокументОбъектПКО.Комментарий = "Продажи за " + СтруктураДанныеРТУ.Дата;
	ДокументОбъектПКО.Сумма = СтруктураДанныеРТУ.Расш1_СуммаДокумента;
	ДокументОбъектПКО.Записать(РежимЗаписиДокумента.Проведение);

	Возврат ДокументОбъектПКО.Ссылка;

КонецФункции

Процедура ЗаархивироватьЧеки()

	// выбираем все незаархивированные чеки и архивируем
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
				   |	Расш1_ДанныеЧеков.Период,
				   |	Расш1_ДанныеЧеков.НомерЧека,
				   |	Расш1_ДанныеЧеков.Номенклатура,
				   |	Расш1_ДанныеЧеков.Количество,
				   |	ИСТИНА КАК Архивный
				   |ИЗ
				   |	РегистрСведений.Расш1_ДанныеЧеков КАК Расш1_ДанныеЧеков
				   |ГДЕ
				   |	НЕ Расш1_ДанныеЧеков.Архивный";

	ВыборкаЧеки = Запрос.Выполнить().Выбрать();
	Пока ВыборкаЧеки.Следующий() Цикл
		ЗаписьЧека = РегистрыСведений.Расш1_ДанныеЧеков.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(ЗаписьЧека, ВыборкаЧеки);
		ЗаписьЧека.Записать();
	КонецЦикла;

КонецПроцедуры

Функция ПолучитьДоговорКонтрагента(Контрагент)

	ОсновнойДоговор = Неопределено;

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ Первые 1
				   |	Договоры.Ссылка
				   |ИЗ
				   |	Справочник._ДемоДоговорыКонтрагентов КАК Договоры
				   |ГДЕ Договоры.Владелец = &Контрагент";
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	ВыборкаДоговор = Запрос.Выполнить().Выбрать();
	Если ВыборкаДоговор.Следующий() Тогда
		ОсновнойДоговор = ВыборкаДоговор.Ссылка;
	КонецЕсли;

	Возврат ОсновнойДоговор;

КонецФункции

#КонецОбласти

#КонецЕсли